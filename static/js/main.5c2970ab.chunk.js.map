{"version":3,"sources":["components/Form.js","components/Current.js","components/History.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addPlace","useState","curPlaceName","setCurPlaceName","curMenu","setCurMenu","curAdress","setCurAdress","onSubmit","e","preventDefault","voted","votes","pushPlace","htmlFor","type","id","value","onInput","target","required","Current","currentPlace","changeVote","delPlace","endVoting","length","className","map","place","href","style","color","cursor","fontSize","onClick","History","history","removeFromHistory","item","i","App","setHistory","setCurrentPlace","to","path","element","arr","filter","oldHistory","push","Date","now","obj","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c2970ab.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Form = ({ addPlace }) => {\r\n\r\n  const [curPlaceName, setCurPlaceName] = useState(\"\")\r\n  const [curMenu, setCurMenu] = useState(\"\")\r\n  const [curAdress, setCurAdress] = useState(\"\")\r\n\r\n  const pushPlace = (e) => {\r\n    e.preventDefault()\r\n    addPlace({\r\n      curPlaceName,\r\n      curMenu,\r\n      curAdress,\r\n      voted: false,\r\n      votes: 0\r\n    })\r\n    setCurPlaceName(\"\")\r\n    setCurMenu(\"\")\r\n    setCurAdress(\"\")\r\n  }\r\n  return (\r\n    <form onSubmit={(e) => pushPlace(e)}>\r\n      <label htmlFor=\"name\">Place name:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"name\"\r\n        value={curPlaceName}\r\n        onInput={e => setCurPlaceName(e.target.value)}\r\n        required\r\n      ></input>\r\n      <label htmlFor=\"menu\">Menu link:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"menu\"\r\n        value={curMenu}\r\n        onInput={e => setCurMenu(e.target.value)}\r\n        required\r\n      ></input>\r\n      <label htmlFor=\"adress\">Adress:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"adress\"\r\n        value={curAdress}\r\n        onInput={e => setCurAdress(e.target.value)}\r\n        required\r\n      ></input>\r\n      <input type=\"submit\" value=\"Add\"></input>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","const Current = ({ currentPlace, changeVote, delPlace, endVoting }) => {\r\n  return (\r\n    <>\r\n      {currentPlace.length > 0 ? <div className=\"place-container\"><ul>\r\n        {currentPlace.map(place => (\r\n          <li key={place.curMenu}>\r\n            <div>{place.curPlaceName}</div>\r\n            <a href={place.curMenu}>Menu</a>\r\n            <div>{place.curAdress}</div>\r\n            <div\r\n              style={{\r\n                color: place.voted ? 'red' : 'grey',\r\n                cursor: \"pointer\",\r\n                fontSize: \"20px\"\r\n              }}\r\n              onClick={() => changeVote(place.curMenu)}\r\n            >&hearts;</div>\r\n            <div>Votes: {place.votes}</div>\r\n            <button\r\n              className=\"del-btn\"\r\n              onClick={() => delPlace(place.curMenu)}\r\n            >Remove</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n        <button onClick={endVoting}>End voting</button>\r\n      </div> :\r\n        <div>No places to vote</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Current;","const History = ({ history, removeFromHistory }) => {\r\n  return (\r\n    <div>{history.length > 0 ? (\r\n      history.map(item => (\r\n        <div key={item[0]} className=\"place-container\"><ul>{item[1].map(i => (\r\n          <li key={i.curMenu}>\r\n            <div>{i.curPlaceName}</div>\r\n            <a href={i.curMenu}>Menu</a>\r\n            <div>{i.curAdress}</div>\r\n            <div>Votes: {i.votes}</div>\r\n          </li>\r\n        ))}\r\n        </ul>\r\n          <button\r\n            onClick={() => removeFromHistory(item[0])}\r\n          >Remove</button>\r\n        </div>\r\n      ))\r\n    ) : (<div>History is empty</div>)}</div>\r\n  );\r\n}\r\n\r\nexport default History;","import { useState } from \"react\";\nimport { BrowserRouter, Routes, Route, NavLink } from \"react-router-dom\"\nimport Form from \"./components/Form\";\nimport Current from \"./components/Current\";\nimport History from \"./components/History\";\n\nfunction App() {\n  const [history, setHistory] = useState([\n    [\n      1638472244942,\n      [\n        {\n          \"curPlaceName\": \"wa\",\n          \"curMenu\": \"https://wa.lviv.ua/menu\",\n          \"curAdress\": \"Князя Романа 7\",\n          \"voted\": true,\n          \"votes\": 15\n        },\n        {\n          \"curPlaceName\": \"Голодний Микола\",\n          \"curMenu\": \"https://golodnyimykola.com.ua/menu\",\n          \"curAdress\": \"Стрийська 352\",\n          \"voted\": false,\n          \"votes\": 10\n        }\n      ]\n    ],\n    [\n      1638472437257,\n      [\n        {\n          \"curPlaceName\": \"Зелений Змій\",\n          \"curMenu\": \"https://zelenyjzmij.com.ua/#menu\",\n          \"curAdress\": \"Вірменська 3\",\n          \"voted\": true,\n          \"votes\": 21\n        },\n        {\n          \"curPlaceName\": \"Рафаель\",\n          \"curMenu\": \"http://rafael.com.ua/menu/\",\n          \"curAdress\": \"Гонти 1 А\",\n          \"voted\": false,\n          \"votes\": 8\n        }\n      ]\n    ]\n  ])\n  const [currentPlace, setCurrentPlace] = useState([])\n  const updateCurrentPlace = obj => {\n    const place = currentPlace\n    place.push(obj)\n    setCurrentPlace(place)\n  }\n  const changeVote = id => {\n    const arr = currentPlace.map(place => {\n      if (place.curMenu === id || place.voted) {\n        place.voted = !place.voted\n        place.voted ? place.votes++ : place.votes--\n      }\n      return place\n    })\n    setCurrentPlace(arr)\n  }\n  const delPlace = id => {\n    const arr = currentPlace.filter(place => place.curMenu !== id)\n    setCurrentPlace(arr)\n  }\n  const endVoting = () => {\n    const oldHistory = history\n    oldHistory.push([Date.now(), [...currentPlace]])\n    setHistory(oldHistory)\n    setCurrentPlace([])\n  }\n  const removeFromHistory = id => {\n    const arr = history.filter(item => item[0] !== id)\n    setHistory(arr)\n  }\n  return (\n    <div className=\"app\">\n      <BrowserRouter>\n        <nav>\n          <NavLink to=\"/\">Voting</NavLink>\n          <NavLink to=\"form\">Create voting</NavLink>\n          <NavLink to=\"history\">History</NavLink>\n        </nav>\n        <Routes>\n          <Route path=\"/\" element={<Current currentPlace={currentPlace} changeVote={changeVote} delPlace={delPlace} endVoting={endVoting} />} />\n          <Route path=\"form\" element={<Form addPlace={updateCurrentPlace} />} />\n          <Route path=\"history\" element={<History history={history} removeFromHistory={removeFromHistory} />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}